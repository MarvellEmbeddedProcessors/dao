# SPDX-License-Identifier: Marvell-MIT
# Copyright (c) 2023 Marvell.

#export CC=gcc
CROSSFILE="$PROJECT_ROOT/ci/build/config/arm64_cn9k_linux_gcc-marvell"
EXE_WRAPPER=$BUILD_DIR/exe_wrapper.sh
NEWCROSSFILE=$BUILD_DIR/crossconfig
PLAT="cn9k"

function build_setup()
{
	local args
	mkdir -p $BUILD_DIR

	# A new config file is derived from base config file modifying only
	# the exe wrapper path.
	sed "s#/tmp/exe_wrapper.sh#$EXE_WRAPPER#g" $CROSSFILE > $NEWCROSSFILE
	sed -i "s/#exe_wrapper/exe_wrapper/g" $NEWCROSSFILE

	# Create a dummy exe_wrapper so that builds dont fail.
	rm -f $EXE_WRAPPER
	echo "#!/bin/bash" > $EXE_WRAPPER
	chmod +x $EXE_WRAPPER

	EXTRA_ARGS="$EXTRA_ARGS --cross-file $NEWCROSSFILE"

	LDFLAGS="${LDFLAGS:-}"
	CFLAGS="${CFLAGS:-}"

	if [[ -n ${CFLAGS:-} ]] || [[ -n ${LDFLAGS:-} ]]; then
		echo "[built-in options]" >> $NEWCROSSFILE
	fi
	if [[ -n ${CFLAGS:-} ]]; then
		args=""
		for flag in ${CFLAGS}; do
			args="${args}'${flag}',"
		done
		echo "c_args = [${args}]" >> $NEWCROSSFILE
	fi

	if [[ -n ${LDFLAGS:-} ]]; then
		args=""
		for flag in ${LDFLAGS}; do
			args="${args}'${flag}',"
		done
		echo "c_link_args = [${args}]" >> $NEWCROSSFILE
	fi
}

BUILD_SETUP_CMD=build_setup
